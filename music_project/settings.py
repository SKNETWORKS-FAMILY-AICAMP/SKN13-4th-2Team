"""
Django settings for music_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '52.79.137.140']

CSRF_TRUSTED_ORIGINS = ['https://*.ngrok-free.app']


# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # 소셜로그인 추가
    'allauth', # 추가
    'allauth.account', # 추가
    'allauth.socialaccount', # 추가
    'allauth.socialaccount.providers.google', # 추가
    'channels', # Add channels
    'search',
    'mypage',
    'forum',
    'accounts',
    'django_extensions',
    'home',
    'faq',
    'widget_tweaks',

]

AUTHENTICATION_BACKENDS=[
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

ASGI_APPLICATION = 'music_project.asgi.application' # Add ASGI application

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware', # Add this line
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'music_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'music_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/databases/

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-KR' # Change this

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True # Ensure this is True

USE_TZ = True

# Add this for translation files
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

DEBUG = True

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",  # 또는 os.path.join(BASE_DIR, 'static')
]

# Media files (User uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# SMTP Settings for actual email sending
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com' # Your SMTP server (e.g., smtp.gmail.com for Gmail)
EMAIL_PORT = 587 # Port for TLS (587) or SSL (465)
EMAIL_USE_TLS = True # Use TLS encryption
EMAIL_USE_SSL = False # Use SSL encryption (set to True if port is 465, then EMAIL_USE_TLS must be False)

# Your email address and app password (LOADED FROM .env FOR SECURITY)
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

# Default email address for sending emails
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', EMAIL_HOST_USER)
SERVER_EMAIL = DEFAULT_FROM_EMAIL # For server error notifications

# Redirect URL after successful login
LOGIN_REDIRECT_URL = '/mypage/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Channels
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# Spotify API Settings
SPOTIPY_CLIENT_ID = os.getenv('SPOTIPY_CLIENT_ID') # Replace with your Spotify Client ID
SPOTIPY_CLIENT_SECRET = os.getenv('SPOTIPY_CLIENT_SECRET')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

SOCIALACCOUNT_PROVIDERS ={
"google":{
"APP":{
"client_id":os.getenv('GOOGLE_CLIENT_ID'),
"secret":os.getenv('GOOGLE_CLIENT_SECRET'),
"key":""
},
"SCOPE":[
    "profile", 
    "email",
],
"AUTH_PARAMS":{
"access_type":"online",
"prompt":"select_account",
}}}

# LastFMapi key
LASTFM_API_KEY = os.getenv('LASTFM_API_KEY')
LASTFM_API_SECRET = os.getenv('LASTFM_API_SECRET')
